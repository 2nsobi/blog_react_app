{"version":3,"sources":["data-store/actions/authActions.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","data-store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","data-store/reducers/authReducer.js","data-store/reducers/projectReducer.js","data-store/reducers/rootReducer.js","index.js"],"names":["signIn","credentials","dispatch","getState","console","log","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","error","connect","state","activeUser","profile","signOut","props","react_default","a","createElement","className","react_router_dom","to","href","onClick","initials","SignedOutLinks","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifs","map","notif","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","notifications","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","handleSubmit","e","preventDefault","_this","handleTextChange","setState","Object","defineProperty","target","value","authError","onSubmit","htmlFor","onChange","creds","SignUp","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","response","doc","set","toUpperCase","createProject","add","objectSpread","authorID","Date","CreateProject","history","push","placeholder","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","isLoaded","ReactDOM","render","es","react_redux_firebase_es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43a4226c.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\n\r\nexport const signIn = (credentials) =>{\r\n    return (dispatch,getState) =>{\r\n        console.log(getState())\r\n\r\n        firebase.auth().signInWithEmailAndPassword(credentials.email,credentials.password)\r\n            .then(()=>{\r\n                dispatch({type: 'LOGIN_SUCCESS'})\r\n            }).catch((error)=>{\r\n                dispatch({type: 'LOGIN_ERROR',error})\r\n            })\r\n    }\r\n}\r\n\r\nexport const signOut = () =>{\r\n    return(dispatch,getState) =>{\r\n\r\n        firebase.auth().signOut()\r\n            .then(()=>{\r\n                dispatch({type:'SIGNOUT_SUCCESS',})\r\n            })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) =>{\r\n    return (dispatch,getState) =>{\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(newUser.email,newUser.password)\r\n            .then((response)=>{\r\n                return firebase.firestore().collection('users').doc(response.user.uid).set({\r\n                    firstName: newUser.firstName,\r\n                    lastName: newUser.lastName,\r\n                    initials: newUser.firstName[0].toUpperCase()+newUser.lastName[0].toUpperCase()\r\n                })\r\n            }).then(()=>{\r\n                dispatch({type:'SIGNUP_SUCCESS'})\r\n            }).catch(error=>{\r\n                dispatch({type:'SIGNUP_ERROR',error})\r\n            })\r\n    }\r\n}\r\n\r\nexport default signIn","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../data-store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) =>{\r\n    const {activeUser} = props\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            {/* prevent flicker refresh by passing a nothing function to href attribite o anchor tag */}\r\n            <li><a href={console.log('Clicked Log Out Link')} onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating yellow lighten-1 black-text'>{activeUser.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        activeUser: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignedInLinks)","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () =>{\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/signin'>Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) =>{\r\n    const{auth} = props\r\n    const links = auth.uid ? <SignedInLinks/>:<SignedOutLinks/>\r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className =\"brand-logo\">this is a blog</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) =>{\r\n    const {notifs} = props\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\"><b>Notifications</b></span>\r\n                    <ul className='notifications'>\r\n                        {notifs && notifs.map(notif=>{\r\n                            return (\r\n                                <li key={notif.id}>\r\n                                    <span className=\"yellow-text\">{notif.user} </span>\r\n                                    <span>{notif.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(notif.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) =>{\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title black-text\"><b>{project.title}</b></span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) =>{\r\n    return(\r\n        <div className=\"project-list section\">\r\n            {/* \"projects &&\" is shortcut for if statement\r\n             that checks if any project are even there*/}\r\n            {projects && projects.map(project=>{\r\n                return(\r\n                    // keys needs to be associated with the parent element in a list in react\r\n                    <Link to={'/project/'+project.id}  key={project.id}>\r\n                        <ProjectSummary project={project}/>\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React,{Component} from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n\r\n        const {projects,auth,notifs} = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects = {projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifs={notifs}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state)\r\n    return {  //brackets because this is returning an object\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifs: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['createdAt','desc']},\r\n        {collection: 'notifications', limit: 3, orderBy: ['time','desc']}\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project,auth} = props\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n    if(project) {\r\n        return(\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\"><b>{project.title}</b></span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) =>{\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null    //arrays from firebase use id as index for each element\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{collection:'projects'}])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport signIn from '../../data-store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    handleTextChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const{authError,auth} = this.props\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className = 'container'>\r\n                <form onSubmit ={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-feild\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleTextChange}/>\r\n                    </div>  \r\n                    <div className=\"input-feild\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleTextChange}/>\r\n                    </div>   \r\n                    <div className=\"input-feild\">\r\n                        <button className=\"btn yellow lighten-1 z-depth-0\">Log In</button>\r\n                        {authError ? \r\n                            <div className=\"red-text center\">\r\n                                <p>{authError}</p>\r\n                            </div> \r\n                        : null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../data-store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    handleTextChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {auth,authError} = this.props\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className = 'container'>\r\n                <form onSubmit ={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-feild\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleTextChange}/>\r\n                    </div>  \r\n                    <div className=\"input-feild\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleTextChange}/>\r\n                    </div>  \r\n                    <div className=\"input-feild\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id='firstName' onChange={this.handleTextChange}/>\r\n                    </div> \r\n                    <div className=\"input-feild\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id='lastName' onChange={this.handleTextChange}/>\r\n                    </div>  \r\n                    <div className=\"input-feild\">\r\n                        <button className=\"btn yellow lighten-1 z-depth-0\">Sign Up</button>\r\n                        {authError ? \r\n                            <div className=\"red-text center\">\r\n                                <p>{authError}</p>\r\n                            </div>\r\n                        :null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        signUp: newUser => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","import firebase from 'firebase/app'\r\n\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState) => {\r\n        // make async call to database\r\n        const activeUser = getState()\r\n        \r\n        firebase.firestore().collection('projects').add({\r\n            ...project,\r\n            authorFirstName: activeUser.firebase.profile.firstName,\r\n            authorLastName: activeUser.firebase.profile.lastName,\r\n            authorID: activeUser.firebase.auth.uid,\r\n            createdAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({type: 'CREATE_PROJECT', project}) // or dispatch({type: 'CREATE_PROJECT', project: project})\r\n        }).catch((error)=>{\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', error})\r\n        })\r\n    }\r\n}\r\n\r\nexport default createProject","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport createProject from '../../data-store/actions/projectActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    handleTextChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {auth} = this.props \r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className = 'container'>\r\n                <form onSubmit ={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-feild\">\r\n                        <label htmlFor=\"title\">Title</label>    {/*label tag allows a user to click the text next to the input text box to enter the text box*/}\r\n                        <input type=\"text\" id='title' onChange={this.handleTextChange}/>\r\n                    </div>  \r\n                    <div className=\"input-feild\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleTextChange} placeholder = 'What do you want to work on?'></textarea>\r\n                    </div>   \r\n                    <div className=\"input-feild\">\r\n                        <button className=\"btn yellow lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {     //brackets because this is returning an object\r\n        createProject: (project) => { dispatch(createProject(project)) }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n//mapStateToProps needs to be the first function passed to connect then the one for mapDispatchToProps\r\n//so if u don't have a mapStateToProps function you can sub it for null\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)","import React, { Component } from 'react';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path ='/' component={Dashboard}/>\n            <Route path ='/project/:id' component={ProjectDetails}/>\n            <Route path='/signin' component={SignIn}/>\n            <Route path='/signup' component={SignUp}/>\n            <Route path='/create' component={CreateProject}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState,action) =>{\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login Failed')\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n        \r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login Success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        \r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('Signout Success')\r\n            return state\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup Success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n            \r\n        case 'SIGNUP_ERROR':\r\n            console.log('Signup Error')\r\n            return{\r\n                ...state,\r\n                authError: action.error.message\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'go to the poles', content: 'dummy content 1'},\r\n        {id: '2', title: 'make sandwich', content: 'bread, tomates, ham, and mayo'},\r\n        {id: '3', title: 'go to sleep', content: 'dummy content 3'}     \r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState,action) =>{\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project)\r\n            return state\r\n        \r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.error)\r\n            return state\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux'\nimport rootReducer from './data-store/reducers/rootReducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {createFirestoreInstance} from 'redux-firestore'\nimport {ReactReduxFirebaseProvider,isLoaded} from 'react-redux-firebase'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nconst initState = {}\n\n// react-redux-firebase config\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\n\nvar fbconfig = {\n    apiKey: \"AIzaSyDwo5XIRdtBeEW0rH4aHx8CKVmHKZFwDRc\",\n    authDomain: \"blog-tut-app.firebaseapp.com\",\n    databaseURL: \"https://blog-tut-app.firebaseio.com\",\n    projectId: \"blog-tut-app\",\n    storageBucket: \"blog-tut-app.appspot.com\",\n    messagingSenderId: \"21805074969\"\n}\n  \nfirebase.initializeApp(fbconfig)\n\n// Initialize other services on firebase instance\nfirebase.firestore() // <- needed if using firestore\n\nconst store = createStore(\n    rootReducer,\n    initState,\n    applyMiddleware(thunk)\n)\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance // <- needed if using firestore\n}\n\nconst loadApp = () =>{\n    if(isLoaded){\n        ReactDOM.render(\n            <Provider store={store}>\n                <ReactReduxFirebaseProvider {...rrfProps}>\n                    <App/>\n                </ReactReduxFirebaseProvider>\n            </Provider>,\n        document.getElementById('root'))\n    }\n}\n\nloadApp()\n\n// store.firebaseAuthIsReady.then(()=>{\n//     ReactDOM.render(\n//         <Provider store={store}>\n//             <ReactReduxFirebaseProvider {...rrfProps}>\n//                 <App/>\n//             </ReactReduxFirebaseProvider>\n//         </Provider>,\n// document.getElementById('root'))});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}